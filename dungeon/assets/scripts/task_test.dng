single_choice_task aufgabe_1 {
    description: "Welcher Buchstabe ist der erste im Alphabet?",
    answers: ["Z", "a", "A"],
    correct_answer_index: 1
}

multiple_choice_task wuppie1 {
    description: "Du bist doof, oder?",
    answers: ["Wupie", "Wuppi", "Wuppie", "Fluppie"],
    correct_answer_index: [2,3]
}

multiple_choice_task wuppie2 {
    description: "Was sind korrekte Wuppies?",
    answers: ["Wupie", "Wuppi", "Wuppie", "Fluppie"],
    correct_answer_index: [2,3]
}



multiple_choice_task wuppie3 {
    description: "Was sind korrekte Wuppies?",
    answers: ["Wupie", "Wuppi", "Wuppie", "Fluppie"],
    correct_answer_index: [2,3]
}

multiple_choice_task wuppie4 {
    description: "Was sind korrekte Wuppies?",
    answers: ["Wupie", "Wuppi", "Wuppie", "Fluppie"],
    correct_answer_index: [2,3]
}

graph g_one{
    aufgabe_1;
    wuppie1;
    wuppie2;
}

graph g_two{
    wuppie2;
    wuppie3;
    wuppie4;
}

graph g_three{
    wuppie2;
}


entity_type wizard_type {
    draw_component {
        path: "character/wizard"
    },
    hitbox_component {},
    position_component{},
    task_component{}
}

entity_type knight_type {
    draw_component {
        path: "character/knight"
    },
    hitbox_component {},
    position_component{}
}

entity_type chort_type {
    draw_component {
        path: "character/monster/chort"
    },
    hitbox_component {},
    position_component{}
}

fn build_scenario1(single_choice_task t) -> entity<><> {
    var ret_set : entity<><>;

    var first_room_set : entity<>;
    var second_room_set : entity<>;

    var wizard : entity;
    var knight : entity;

    wizard = instantiate(wizard_type);
    wizard.task_component.task = t;

    knight = instantiate(knight_type);

    first_room_set.add(wizard);
    second_room_set.add(knight);

    ret_set.add(first_room_set);
    ret_set.add(second_room_set);

    return ret_set;
}

fn build_scenario2(multiple_choice_task t) -> entity<><> {
    var ret_set : entity<><>;

    var first_room_set : entity<>;
    var second_room_set : entity<>;
    var third_room_set : entity<>;

    var wizard : entity;
    var knight : entity;
    var chort : entity;
    var other_chort : entity;
    var other_chort_2 : entity;

    wizard = instantiate(wizard_type);
    wizard.task_component.task = t;

    knight = instantiate(knight_type);
    chort = instantiate(chort_type);
    other_chort = instantiate(chort_type);
    other_chort_2 = instantiate(chort_type);

    first_room_set.add(wizard);
    second_room_set.add(knight);
    third_room_set.add(chort);
    third_room_set.add(other_chort);
    third_room_set.add(other_chort_2);

    ret_set.add(first_room_set);
    ret_set.add(second_room_set);
    ret_set.add(third_room_set);

    return ret_set;
}

dungeon_config mission_one {
    dependency_graph: g_one
}

dungeon_config mission_two {
    dependency_graph: g_two
}

dungeon_config mission_three {
    dependency_graph: g_three
}
