name: Java CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Gradle
        run: ./gradlew assemble

  check:
    name: Check files
    outputs:
      tests_changed: ${{ steps.check_files.outputs.tests_changed }}
      frontend_changed: ${{ steps.check_files.outputs.frontend_changed }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check modified files
        id: check_files
        run: |
          git diff --name-only origin/master HEAD > files.txt
          tests_changed=false
          frontend_changed=false
          while IFS= read -r file; do
            if [[ $file == */test/* ]]; then
              tests_changed=true
            fi
            if [[ $file == */frontend/* ]]; then
              frontend_changed=true
            fi

            if [[ $tests_changed == true && $frontend_changed == true ]]; then
              break
            fi
          done < files.txt
          echo "tests_changed=$tests_changed" >> $GITHUB_OUTPUT
          echo "frontend_changed=$frontend_changed" >> $GITHUB_OUTPUT

  junit_test_changed:
    name: JUnit (matrix build)
    needs: [build, check]
    if: ${{ needs.check.outputs.tests_changed == 'true' }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: JUnit
        run: ./gradlew test

  junit:
    name: JUnit (Linux only)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: JUnit
        run: ./gradlew test

  spotless:
    name: Spotless
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Spotless
        run: ./gradlew spotlessJavaCheck

  checkstyle:
    name: Checkstyle
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Checkstyle
        run: ./gradlew checkstyleMain checkstyleTest
  frontend_changed:
    name: Frontend (matrix build)
    needs: [build, check]
    if: ${{ needs.check.outputs.frontend_changed == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout frontend
        uses: actions/checkout@v4
        with:
          sparse-checkout: blockly/frontend
          sparse-checkout-cone-mode: true
      - name: Node.js setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: blockly/frontend/package-lock.json
      - name: Install dependencies
        working-directory: blockly/frontend
        run: npm ci
      - name: Build frontend
        working-directory: blockly/frontend
        run: npm run build
      - name: Run linter
        working-directory: blockly/frontend
        run: npm run lint
