plugins {
    id 'application'
    id 'java-library'
}

project.ext.lwjglVersion = "3.3.3"
project.ext.jomlVersion = "1.10.5"
project.ext.joml_primitivesVersion = "1.10.0"
project.ext.log4jVersion = "2.23.1"
project.ext.natives = ["natives-linux", "natives-linux-arm32", "natives-linux-arm64",
                       "natives-macos", "natives-macos-arm64",
                       "natives-windows-x86", "natives-windows", "natives-windows-arm64"]

repositories {
    mavenCentral()
}

dependencies {
    api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    api "org.lwjgl:lwjgl"
    api "org.lwjgl:lwjgl-assimp"
    api "org.lwjgl:lwjgl-freetype"
    api "org.lwjgl:lwjgl-glfw"
    api "org.lwjgl:lwjgl-meshoptimizer"
    api "org.lwjgl:lwjgl-nfd"
    api "org.lwjgl:lwjgl-openal"
    api "org.lwjgl:lwjgl-opencl"
    api "org.lwjgl:lwjgl-opengl"
    api "org.lwjgl:lwjgl-opus"
    api "org.lwjgl:lwjgl-stb"

    api "org.apache.logging.log4j:log4j-api:$project.ext.log4jVersion"
    api "org.apache.logging.log4j:log4j-core:$project.ext.log4jVersion"

    api "org.joml:joml:${jomlVersion}"
    api "org.joml:joml-primitives:${joml_primitivesVersion}"

    for (nat in project.ext.natives) {
        runtimeOnly "org.lwjgl:lwjgl::$nat"
        runtimeOnly "org.lwjgl:lwjgl-assimp::$nat"
        runtimeOnly "org.lwjgl:lwjgl-freetype::$nat"
        runtimeOnly "org.lwjgl:lwjgl-glfw::$nat"
        runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$nat"
        runtimeOnly "org.lwjgl:lwjgl-nfd::$nat"
        runtimeOnly "org.lwjgl:lwjgl-openal::$nat"
        runtimeOnly "org.lwjgl:lwjgl-opengl::$nat"
        runtimeOnly "org.lwjgl:lwjgl-opus::$nat"
        runtimeOnly "org.lwjgl:lwjgl-stb::$nat"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    sourceCompatibility = JavaVersion.VERSION_21
}

application {
    mainClass = "de.fwatermann.dungine.Dungine"
}

jar {
    manifest {
        attributes(
            'Main-Class': 'de.fwatermann.dungine.Dungine'
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
