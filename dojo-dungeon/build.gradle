plugins {
    id 'java-library'
    id 'antlr'
}


dependencies {
    api project(':game')
    api project(':dungeon')

    // ANTLR version 4 for DSL Grammar
    antlr supportDependencies.antlr
}


sourceSets.main.java.srcDirs = ['src/', "$projectDir/build/generated-src/antlr/main/"]
sourceSets.main.resources.srcDirs = ['assets/']

sourceSets.test.java.srcDirs = ['test/']
sourceSets.test.resources.srcDirs = ['test_resources/']

sourceSets.main.antlr.srcDirs = ['src/dsl/antlr']


// store name of method parameter names in .class files (used to build
// DSL-adapter types, which contain the names of the parameters as members)
tasks.withType(JavaCompile).configureEach {
    configure(options) {
        options.compilerArgs << '-parameters'
    }
}

// generate ANTLR visitor and listener classes from grammar
generateGrammarSource {
    maxHeapSize = '64m'
    arguments += ['-visitor', '-listener' ]
}


// start the dungeon (different configurations)
tasks.register('runDojoStarter', JavaExec) {
    mainClass = 'starter.DojoStarter'
    classpath = sourceSets.main.runtimeClasspath
}



